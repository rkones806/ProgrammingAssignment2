library (datasets)
data(iris)
?iris
arges(lapply)
args(lapply)
args(tapply)
tapply(iris,species=virginica,mean)
tapply("iris","species" = "virginica",mean)
tapply(iris,iris$species,mean)
lapply(iris,mean)
lapply(iris$virginica,mean)
tapply(iris$sepal.leng,mean)
tapply(iris$sepal.length,iris$species,mean)
tapply(iris$Sepal.length,iris$species,mean)
tapply(iris$Sepal.length,iris$Species,mean)
apply(iris$virginica,mean)
args(apply)
lappy(iris@virginica,mean)
lapply(iris$virginica, mean)
tapply(iris,iris$virginica,mean)
tapply(iris$Sepal.length,iris$species,mean)
summary(iris)
iris$virginia
iris$sepal.length
iris@Sepal.Length
iris$Sepal.Length
tapply(iris$Sepal.Length,iris$Species,mean)
tapply(iris$Sepal.Length,iris$virginica,mean)
args(split)
x <- split(iris,iris$virginica)
apply(iris,2,mean)
apply(iris[,1:4],1,mean)
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris,2,mean,rm.na)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
with(mtcars,tapply(mpg,cyl,mean))
sapply(mtcars,cyl,mean)
lapply(mtcars,mean)
mean(mtcars$mpg,mtcars$cyl)
print(mtcars)
tapply(mtcars$hp,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl =="8",mean)
tapply(mtcars$hp,mtcars$cyl =="4",mean)
209.21429 - 82.63636
debug(ls)
ls
makeCacheMatrix <- function (x = matrix ()){
inverse <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(inverse) inv <<- inverse
getinv <- function () inv
list( set=set, get=get,
setinv = setinv
getinv = getinv)
}
}
makeCacheMatrix <- function (x = matrix ()){
inverse <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(inverse) inv <<- inverse
getinv <- function () inv
list( set=set, get=get,
setinv = setinv,
getinv = getinv)
}
end
q
undeg(ls)
undebug(ls)
?debug
exit
ls
undebug(ls)
q()
q
q
quit
q
help
>
>
makeCacheMatrix <- function (x = matrix ()){
>
inverse <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(inverse) inv <<- inverse
getinv <- function () inv
list( set=set, get=get,
setinv = setinv,
getinv = getinv)
}
makeCacheMatrix <- function (x = matrix ()){
>
inverse <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(inverse) inv <<- inverse
getinv <- function () inv
list( set = set, get = get,
setinv = setinv,
getinv = getinv)
}
makeCacheMatrix <- function (x = matrix ()){
>
inverse <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(inverse) inv <<- inverse
getinv <- function () inv
list( set = set, get = get,
setinv = setinv,
getinv = getinv)
}
makeCacheMatrix <- function (x = matrix ()){
inverse <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(inverse) inv <<- inverse
getinv <- function () inv
list( set = set, get = get,
setinv = setinv,
getinv = getinv)
}
makeCacheMatrix(rnorm(4),2,2)
makeCacheMatrix(rnorm(4)
>
end
makeCacheMatrix <- function (x = matrix ()){
inverse <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(solve) inv <<- solve
getinv <- function () inv
list( set = set, get = get,
setinv = setinv,
getinv = getinv)
}
makeCacheMatrix <- function (x = matrix ()){
inv <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(solve) inv <<- solve
getinv <- function () inv
list( set = set, get = get,
setinv = setinv,
getinv = getinv)
}
x <-rbind(c(1,2),c(5,6))
makeCacheMatrix(x)
cwd
wd
getwd()
setwd("C:/Users/Ross Koenig/Desktop/Coursera")
load(makecachematrix.R)
load("makecachematrix.R")
load(makecachematrix.R)
load("makecachematrix.R")
makeCacheMatrix <- function (x = matrix ()){
inv <- NULL
set <- function (y) {
x <<- y
inv <<- NULL
}
get <- function () x
setinv <- function(solve) inv <<- solve
getinv <- function () inv
list( set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function (x,...){
inv <- x$getinv()
if(!is.null(x)){
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setinv(inv)
}
x <- rbind( c(1,2),C(5,6))
x <- rbind( c(1,2),C(5,6))
x <- rbind( c(1,2), C(5,6))
x <- rbind(c(1,2), C(5,6))
x = rbind(c(1,2), C(5,6))
x = rbind (c(1,2),c(5,6))
x
cachematrix(x)
makeCacheMatrix(x)
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
source("makecachematrix.R")
source("cacheSolve.R")
x
makeCacheMatrix(x)
cacheSolve(x)
cacheSolve(x)
source("cacheSolve.R")
makeCacheMatrix(x)
cacheSolve(x)
solve(x)
source("makecachematrix.R")
source("cacheSolve.R")
x
source("makecachematrix.R")
makeCacheMatrix(x)
cacheSolve(x)
solve(x)
x
solve(x)
m = makeCacheMatrix(x)
m$get(0)
m$get()
cachesolve(m)
cacheSolve(m)
cacheSolve(m)
getwd()
setwd("C:/Users/Ross Koenig")
source("cachematrix.R")
setwd("C:/Users/Ross Koenig/ProgrammingAssignment2")
source("cachematrix.R")
x
tina = rbind (c(1,2), c(2,3))
tina
makeCacheMatrix(tina)
cacheSolve(tina)
tk <- makeCacheMatrix(tina)
tk$get
tk$get ()
cacheSolve(tk)
cacheSolve(tk)
